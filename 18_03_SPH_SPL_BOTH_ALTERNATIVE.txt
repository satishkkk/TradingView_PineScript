// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© satishkathiriya99

//@version=4
study("Structural Pivot M", shorttitle="Structural Pivot", format=format.price, precision=0, overlay=true,max_labels_count=500)
n = input(title="Periods", defval=20, minval=2, type=input.integer)


// ---SPH---
int tempSPHIndex = 0
//insted of n-1 take minimum of previous tempSPHIndex and n-1
for i=1 to n-1 by 1
    if ((high[i] > high[i-1]) and (high[i] > high[i+1]))
        if(bar_index-bar_index[i] >= 2)
            tempSPHIndex := bar_index-i
            break

gapBetweenTempSPHAndBar = nz(bar_index-tempSPHIndex)

int SPH = 0 
var sphOUT = array.new_int(5)
if(gapBetweenTempSPHAndBar >= 2)
    for i=1 to gapBetweenTempSPHAndBar-1 by 1
        for j=i+1 to gapBetweenTempSPHAndBar by 1
            if( (low[j] > low[i]) and (low[i] > low[0]) and (close[j] > close[i]) and (close[i] > close[0]) )
                array.push(sphOUT, tempSPHIndex)
                SPH:=tempSPHIndex

// m = array.size(sphOUT)-1
// if(array.get(sphOUT, m) != array.get(sphOUT, m)[1])
//     label.new(x=array.get(sphOUT, m),y=high,style=label.style_triangleup,color=color.olive,textcolor= color.olive,text="sph",yloc=yloc.abovebar)

// ---SPL---
int tempSPLIndex = 0
//insted of n-1 take minimum of previous tempSPHIndex and n-1
for i=1 to n-1 by 1
    if ((low[i] < low[i-1]) and (low[i] < low[i+1]))
        if(bar_index-bar_index[i] >= 2)
            tempSPLIndex := bar_index-i
            break

gapBetweenTempSPLAndBar = nz(bar_index-tempSPLIndex)

int SPL = 0 
var splOUT = array.new_int(5)
if(gapBetweenTempSPLAndBar >= 2)
    for i=1 to gapBetweenTempSPLAndBar-1 by 1
        for j=i+1 to gapBetweenTempSPLAndBar by 1
            if( (high[j] < high[i]) and (high[i] < high[0]) and (close[j] < close[i]) and (close[i] < close[0]) )
                array.push(splOUT, tempSPLIndex)
                SPL:= tempSPLIndex

// splOut_size = array.size(splOUT)-1
// if(array.get(splOUT, splOut_size) != array.get(splOUT, splOut_size)[1])
//     label.new(x=array.get(splOUT, splOut_size),y=low,style=label.style_triangledown,color=color.maroon,textcolor= color.maroon,text="spl", yloc=yloc.belowbar)



// id = label.new(x=bar_index,y=high+500,style=label.style_none,color=color.green,textcolor= color.black)
// label.set_text(id=id, text=tostring(SPH) )

// id1 = label.new(x=bar_index,y=low,style=label.style_none,color=color.green,textcolor= color.green)
// label.set_text(id=id1, text=tostring(SPL) )


var bool markSPH = true
var bool markSPL = false
bool markFinalSPH = false
bool markFinalSPL = false
if( (SPH != 0) and (SPL!=0))
    //write yr logic 
    label.new(x=SPH,y=high,style=label.style_triangleup,color=color.olive,textcolor= color.olive,text="sph",yloc=yloc.abovebar)
    label.new(x=SPL,y=low,style=label.style_triangledown,color=color.maroon,textcolor= color.maroon,text="spl", yloc=yloc.belowbar)
    
else if( (SPH != 0) and ( markSPH ))
    //add sph symbol
    markFinalSPH:= true
    markSPH := false
    markSPL := true
    label.new(x=SPH,y=high,style=label.style_triangleup,color=color.olive,textcolor= color.olive,text="sph",yloc=yloc.abovebar)
else if((SPL !=0) and (markSPL))
    //add spl symbol
    markFinalSPL:= true
    markSPL := false
    markSPH := true
    label.new(x=SPL,y=low,style=label.style_triangledown,color=color.maroon,textcolor= color.maroon,text="spl", yloc=yloc.belowbar)

plot(bar_index, title='bar_index') 
plot(gapBetweenTempSPHAndBar, title='gapBetweenTempSPHAndBar')
plot(gapBetweenTempSPLAndBar, title='gapBetweenTempSPLAndBar')
plot(30000+SPH, title='SPH1',color=color.black)
plot(30000+SPL, title='SPL1',color=color.green)
plot(tempSPHIndex, title='tempSPHIndex')
plot(tempSPLIndex, title='tempSPLIndex')
plot(markSPL?1:0,title='markSPL')
plot(markSPH?1:0,title='markSPH')

// plotshape(markFinalSPH, style=shape.triangleup,   location=location.abovebar, offset=-3, color=color.olive,  transp=0, size = size.small)   
// plotshape(markFinalSPL, style=shape.triangledown, location=location.belowbar, offset=-3, color=color.maroon, transp=0, size = size.small)

// i2 = label.new(x=bar_index,y=high+1000,style=label.style_none,color=color.green,textcolor= color.olive)
// label.set_text(id=i2, text=markSPH?"TRUE":"FALSE" )

// id3 = label.new(x=bar_index,y=low-1000,style=label.style_none,color=color.green,textcolor= color.maroon)
// label.set_text(id=id3, text=markSPL?"TRUE":"FALSE" )

// i4 = label.new(x=bar_index,y=high+5000,style=label.style_none,color=color.green,textcolor= color.yellow)
// label.set_text(id=i4, text=markFinalSPH?"TRUE":"FALSE" )

// id5 = label.new(x=bar_index,y=low-5000,style=label.style_none,color=color.green,textcolor= color.blue)
// label.set_text(id=id5, text=markFinalSPL?"TRUE":"FALSE" )




// plot(30000+array.get(sphOUT, m), title='lastIndexOfArray', color=color.white)
// plot(30000+array.get(sphOUT, m)[1], title='lastIndexOfArray-1', color=color.white)
// plot(10000+m, title='arraySize', color=color.white)     
// plot(25000+array.get(sphOUT, m-1), title='index', color=color.white)
// plot(25000+array.get(sphOUT, m-2), title='Previousindex', color=color.white)
// for i=m-1 to 1
//     index = array.get(sphOUT, i)
//     previousIndex = array.get(sphOUT, i-1)
//     if(index != previousIndex)
//         label.new(x=index,y=high+1000,style=label.style_label_up,color=color.black,textcolor= color.black,text="sph")
    
      
// plot(condition? 36000+1:37000, title='condition', color=color.white)     


// // Down TO Up Trend Reveresal
// bool trendReversalDownToUp = false
// trendReversalDownToUp := ((low[1] > low[2]) and (low[3] > low[2]))
// downFractal = (trendReversalDownToUp )

// //combine all the trend 
// // 0 -> No trend
// // 1 -> down to up trend
// // 2 -> up to down trend
// // 3 -> both 1 and 2 trend at same 
// // int combineTrendReversal = 0
// // combineTrendReversal := trendReversalDownToUp ? 1 : trendReversalUpToDown ? 2 : 0
// // combineTrendReversal := (trendReversalDownToUp and trendReversalUpToDown) ? 3 : combineTrendReversal

// // calculate previous up and previous down 
// previousUp1 = valuewhen(trendReversalUpToDown, bar_index , 0)
// previousUp2 = valuewhen(trendReversalUpToDown, bar_index , 1)


// // plot(trendReversalDownToUp ? 34000 : 37000 ,  title='trendReversalUpToDown', color=color.fuchsia)
// plot(bar_index+27000, title='bar_index', color=color.white)
// plot(previousUp1+27000, title='previousUp1', color=color.white)
// plot(previousUp2+27000, title='previousUp2', color=color.white)

// gapBetweenUp = bar_index-previousUp1+2
// plot(gapBetweenUp+35100, title='gapBetweenUp', color=color.white)
// previousDown = valuewhen(trendReversalDownToUp, bar_index-2 , 0)
// gapBetweenDown = bar_index-previousDown

// bool sphCondition = false

// if (abs(gapBetweenUp) >= 2)
//     for i = 1 to gapBetweenUp-1 by 1
//         for j=i+1 to gapBetweenUp by 1
//             sphCondition:=( (high < high[i]) and (high[i] < high[j]) ) ? true : sphCondition

// plot(sphCondition ? 1+35100 : 35000, title='sphCondition', color=color.white)
// plot(trendReversalUpToDown ? 1+35100 : 35000, title='trendReversalUpToDown', color=color.white)

// bool sph = sphCondition and trendReversalUpToDown

// plotshape(downFractal, style=shape.triangledown, location=location.belowbar, offset=-2, color=color.maroon, transp=0, size = size.small,title = "downFractal")
// plotshape(upFractal, style=shape.triangleup,   location=location.abovebar,offset=-2, color=color.olive,  transp=0, size = size.small,title = "upFractal")
// plotshape(sph, style=shape.xcross,   location=location.abovebar,offset=-2, color=color.black,  transp=0, size = size.small,title = "sph")

// // id = label.new(x=bar_index,y=low+3000,style=label.style_none,color=color.yellow,textcolor= color.black)
// // label.set_text(id=id, text=tostring(gapBetweenUp) )


// // id1 = label.new(x=bar_index,y=high+3000,style=label.style_cross,color=color.maroon,textcolor= color.maroon)
// // label.set_text(id=id1, text=tempsph ? "true" :"false" )

